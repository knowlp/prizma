package com.hrzafer.prizma.util;

import java.util.List;
import java.util.Map;

/**
 * This class is an enum because:
 * it is singleton, thread-safe and lazy-initialized
 * Uses a word-stem dictionary generated by Zemberek-3
 * If word includes apostrophe (') char this class returns the section before the apostrophe.
 */
public enum NuveCachedStemmer implements Stemmer {

    Instance;

    private final String stemsPath = "/stemDict/nuve_stems2.dict";
    private final String catAdultStemsPath = "/stemDict/catAdult_stems.dict";
    private final String misspelledStemsPath = "/stemDict/misspelled_stems.dict";
    private final Map<String, String> map;

    private NuveCachedStemmer() {
        map = StemDictReader.read(stemsPath);
        map.putAll(StemDictReader.read(catAdultStemsPath));
        map.putAll(StemDictReader.read(misspelledStemsPath));
    }

    @Override
    public String stem(String token) {

        int apostropheIndex = token.indexOf("\'");

        if (apostropheIndex > -1){
            return token.substring(0, apostropheIndex);
        }
        if (map.containsKey(token)){
            return map.get(token);
        }

        return token;
    }

    @Override
    public String stem(List<String> tokens, int index) throws UnsupportedOperationException {
        return null;
    }
}
